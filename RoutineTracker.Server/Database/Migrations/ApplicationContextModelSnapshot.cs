// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoutineTracker.Server.Database;

#nullable disable

namespace RoutineTracker.Server.Database.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoutineTracker.Server.Entities.Exercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<HashSet<string>>("Categories")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("DemostrationUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("RoutineTracker.Server.Entities.Routine", b =>
                {
                    b.Property<Guid>("RoutineId")
                        .HasColumnType("uuid");

                    b.Property<int[]>("Days")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("RoutineId");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("RoutineTracker.Server.Entities.RoutineExercise", b =>
                {
                    b.Property<Guid>("RoutineId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<int>("BreakTime")
                        .HasColumnType("integer");

                    b.Property<int>("Reps")
                        .HasColumnType("integer");

                    b.Property<int>("Sets")
                        .HasColumnType("integer");

                    b.HasKey("RoutineId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("RoutineExercises");
                });

            modelBuilder.Entity("RoutineTracker.Server.Entities.RoutineExercise", b =>
                {
                    b.HasOne("RoutineTracker.Server.Entities.Exercise", "Exercise")
                        .WithMany("Routines")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoutineTracker.Server.Entities.Routine", "Routine")
                        .WithMany("Exercises")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("RoutineTracker.Server.Entities.Exercise", b =>
                {
                    b.Navigation("Routines");
                });

            modelBuilder.Entity("RoutineTracker.Server.Entities.Routine", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
